{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","_","style","to","TodoItem","getStyle","borderBotom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","target","name","value","setState","onSubmit","e","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","a","filter","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7df538ec.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\n\nconst Header = _ => {\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n                <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"about\">About</Link>\n        </header>\n    )\n}\n\nexport default Header;\n","/* eslint-disable react/no-typos */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: `#f4f4f4`,\n            padding: `10px`,\n            borderBotom: `1px #ccc dotted`,\n            textDecoration: this.props.todo.completed ?\n            'line-through' : 'none'\n\n        }\n    }\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n            <div style={ this.getStyle() }>\n                <p>\n                    <input \n                        type='checkbox'\n                        onChange={ this.props.markComplete.bind(this, id) }/>\n                    { ' ' }\n                    { title }\n                    <button \n                        style={btnStyle}\n                        onClick={this.props.delTodo.bind(this, id)}\n                    >\n                        x\n                    </button>\n                </p>\n                    \n            </div>\n        )\n    }\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.array.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 9px',\n    borderRadius:  '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n    render() {\n        return this.props.todos\n        .map( todo => \n        <TodoItem \n            key={todo.id} \n            todo={todo}\n            markComplete={this.props.markComplete}\n            delTodo={this.props.delTodo}\n        />);\n    }\n}\n\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n    state = {\n        title: ''\n    }\n\n    onChange = ({ target: { name, value } }) => this.setState({ [name]: value });\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title: ''})\n    }\n\n    render() {\n        return (\n            <form \n                style={{ display: 'flex' }}\n                onSubmit={this.onSubmit}\n            >\n                <input \n                    type='test' \n                    name='title'\n                    style={{ flex: '10', padding: '5px' }}\n                    placeholder='add Todo ...'\n                    value={ this.state.title}\n                    onChange={this.onChange}\n                />\n                <input \n                    type='submit'\n                    value='Submit'\n                    className='btn'\n                    style={{ flex: '1' }}\n                />\n            </form>\n        )\n    }\n}\n\nexport default AddTodo\n","import React from 'react'\n\nconst About = _ => {\n    return (\n        <React.Fragment>\n            <h1>About</h1>\n            <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\n        </React.Fragment>\n    )\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n\n//import { GET, POST } from './libs/utils';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  async componentDidMount() {\n    const url = 'https://jsonplaceholder.typicode.com/todos?_limit=10';\n    //const todos = await GET(url);\n    //this.setState({ todos })\n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(\n      todo => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }) });\n  }\n\n  delTodo = async (id) => {\n    const url = `https://jsonplaceholder.typicode.com/todos/${id}`;\n    //const res = await DELETE(url, { method: 'DELETE'});\n    this.setState({ todos: [...this.state.todos.filter( todo => todo.id !== id )]})\n  }\n\n  addTodo = async title => {\n    const url = 'https://jsonplaceholder.typicode.com/todos';\n    const body = { title, completed: false };\n    //const newTodo = await POST(url, body);\n    //this.setState({ todos: [...this.state.todos, newTodo] });\n  }\n\n    render() {\n        return (\n          <Router>\n            <div className=\"App\">\n                <div className='container'>\n                    <Header />\n                    <Route \n                      exact\n                      path=\"/\" \n                      render={props => (\n                        <React.Fragment>\n                          <AddTodo addTodo={this.addTodo} />\n                          <Todos \n                              todos={this.state.todos}\n                              markComplete={this.markComplete}\n                              delTodo={this.delTodo}\n                          />\n                        </React.Fragment>\n                      )}\n                    />\n                    <Route\n                      path=\"/about\" component={About}\n                    />\n                </div>\n            </div>\n          </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}